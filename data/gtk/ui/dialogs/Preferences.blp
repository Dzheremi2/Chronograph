using Gtk 4.0;
using Adw 1;

template $ChronographPreferences : Adw.PreferencesDialog {
  Adw.PreferencesPage {
    title: _("General");
    icon-name: "home-symbolic";

    Adw.PreferencesGroup {
      title: _("Behavior");

      Adw.SwitchRow reset_quick_edit_switch {
        title: _("Reset quick edit dialog on close");
        subtitle: _("Choose, if quick edit dialog text should be cleaned after exit or not");
      }

      Adw.SwitchRow save_session_on_quit_switch {
        title: _("Save session on app close");
        subtitle: _("Re-opens last opened directory on the next startup");
      }

      Adw.SwitchRow automatic_list_view_switch {
        title: _("Automatically toggle List View mode");
        subtitle: _("Automatically toggles List View mode when display size is not big enough");
      }

      Adw.ExpanderRow load_compressed_covers_switch {
        title: _("Display compressed covers");
        subtitle: _("May slightly reduce memory consumption.\nThis does not affect actual images stored within files");
        show-enable-switch: true;

        Adw.SpinRow compress_level_spin {
          title: _("Quality level");
          subtitle: _("The higher value, the higher cover quality");
          adjustment: compress_level_adjustment;
        }
      }

      Adw.ExpanderRow recursive_parsing_switch {
        show-enable-switch: true;
        title: _("Parse directories recursively");
        subtitle: _("Scans provided directory for supported files recursively");

        Adw.SwitchRow follow_symlinks_switch {
          title: _("Follow symlinks");
          subtitle: _("If a directory has symlinks to other directories, they would be parsed too\nMay cause excessive memory consumption and looping if it has looped symlinks");
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Debug");

      Adw.SwitchRow enable_debug_logging_switch {
        title: _("Enable Debug logging profile");
        subtitle: _("Expands logging information for debug purposes");
        tooltip-text: _("NEEDS RESTART");
      }
    }
  }

  Adw.PreferencesPage {
    title: _("Syncing");
    icon-name: "sync-line-symbolic";

    Adw.PreferencesGroup {
      title: _("General");

      Adw.ComboRow syncing_type_combo_row {
        title: _("Syncing type");
        subtitle: _("Defines the default workflow of syncing process. It may be either Line-by-Line, or Word-by-Word\nWORD-BY-WORD ISN'T CAPABLE WITH MOBILE DEVICES");
        model: sync_types;
      }

      Adw.SwitchRow precise_milliseconds_switch {
        title: _("Use precise milliseconds");
        subtitle: _("Use 3-digit milliseconds instead of 2-digit");
      }
    }
  }

  Adw.PreferencesPage {
    title: _("File Manipulation");
    icon-name: "chr-file-symbolic";

    Adw.PreferencesGroup {
      Adw.SwitchRow auto_file_manipulation_switch {
        title: _("Auto file manipulation");
        subtitle: _("Automatically creates and updates files when any of lyrics lines changed");
      }
    }

    Adw.PreferencesGroup {
      title: _("General");

      Adw.ComboRow auto_file_manipulation_format {
        title: _("File format");
        subtitle: _("File format for auto manipulation");
        model: formats;
        sensitive: bind auto_file_manipulation_switch.active;
      }

      Adw.SpinRow autosave_throttling_spin {
        title: _("Autosave interval");
        subtitle: _("Autosave interval after lyrics syncing inactivity");
        adjustment: autosave_throttling_adjustment;
        sensitive: bind auto_file_manipulation_switch.active;
      }
    }

    Adw.PreferencesGroup {
      title: "eLRC";

      Adw.SwitchRow save_plain_lrc_also_switch_row {
        title: _("Save plain LRC too");
        subtitle: _("Saves a plain LRC file along with eLRC one. Won't work if eLRC prefix isn't set");
        sensitive: bind auto_file_manipulation_switch.active;
      }

      Adw.EntryRow elrc_prefix_entry_row {
        title: _("eLRC prefix");
        sensitive: bind auto_file_manipulation_switch.active;

        [suffix]
        Gtk.MenuButton {
          valign: center;
          halign: center;
          direction: up;
          icon-name: "info-button-symbolic";
          tooltip-text: C_("button tooltip; noun", "Help");
          popover: Popover {
            child: Label {
              label: _("A prefix, eLRC files will have to not interfere with plain LRC ones");
            };
          };

          styles ["flat"]
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Lyrics embedding");

      Adw.ExpanderRow embed_lyrics_switch {
        title: _("Embed lyrics within audio file");
        show-enable-switch: true;
        sensitive: bind auto_file_manipulation_switch.active;

        Adw.SwitchRow use_individual_synced_tag_vorbis_switch {
          title: _("Use individual synced lyrics tag in Vorbis files");
          subtitle: _("Enables writing synced lyrics into separate tag in Vorbis Comment capable files (ogg, flac, opus)");
          sensitive: bind auto_file_manipulation_switch.active;
        }
      }

      Adw.ActionRow {
        title: _("Embed lyrics default format");
        subtitle: _("Brings lyrics to selected format before embedding");
        sensitive: bind auto_file_manipulation_switch.active;

        [suffix]
        Adw.ToggleGroup embed_lyrics_default_toggle_group {
          valign: center;

          Adw.Toggle {
            label: _("Plain");
            name: "plain";
            tooltip: _("Plain");
          }
          Adw.Toggle {
            label: "LRC";
            name: "lrc";
            tooltip: "LRC";
          }
          Adw.Toggle {
            label: "eLRC";
            name: "elrc";
            tooltip: "eLRC";
          }
        }

        [suffix]
        Gtk.MenuButton {
          valign: center;
          halign: center;
          icon-name: "info-button-symbolic";
          tooltip-text: C_("button tooltip; noun", "Help");
          direction: up;
          popover: Popover {
            child: Label {
              wrap-mode: word;
              wrap: true;
              label: _("The lyrics would be brought to selected format BEFORE the embedding starts.\nIf you're using e.g eLRC, but default formatis set to LRC, then lyrics will be converted to LRC and then embedded the way you've selected (Vorbis)\nThis only fallbacks the lyrics to selected format (eLRC -> LRC -> Plain)");
            };
            position: top;
          };

          styles ["flat"]
        }
      }
    }
  }
}

StringList formats {
  strings [
    ".lrc",
    ".txt"
  ]
}

StringList sync_types {
  strings [
    _("Line-by-Line"),
    _("Word-by-Word")
  ]
}

Adjustment compress_level_adjustment {
  lower: 1;
  upper: 95;
  value: 75;
  step-increment: 5;
}

Adjustment autosave_throttling_adjustment {
  lower: 1;
  upper: 10;
  value: 5;
  step-increment: 1;
}